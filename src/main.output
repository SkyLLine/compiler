Nonterminals useless in grammar

    idlist


Terminals unused in grammar

    T_BOOL
    T_INT_POINTER
    T_CHAR_POINTER
    ADD_ASSIGN
    SUB_ASSIGN
    MUL_ASSIGN
    DIV_ASSIGN
    MOD_ASSIGN
    CHAR
    BOOL
    SELF_INC
    SELF_DEC
    GET_ADDRESS


Rules useless in grammar

   68 idlist: variable
   69       | variable COMMA idlist


State 53 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statement statements

    4 statement: declare_stmt SEMICOLON
    5          | assign_stmt SEMICOLON
    6          | for_stmt
    7          | while_stmt
    8          | if_else_stmt
    9          | printf_stmt SEMICOLON
   10          | scanf_stmt SEMICOLON
   11          | RETURN expr SEMICOLON
   12          | RETURN SEMICOLON
   13          | SEMICOLON

   14 field: LBRACE statements RBRACE

   15 for_stmt: FOR LPAREN simple_instructions SEMICOLON bool_expr SEMICOLON simple_instructions RPAREN field

   16 assign_stmt: simple_instructions

   17 if_else_stmt: IF LPAREN bool_expr RPAREN field ELSE field
   18             | IF LPAREN bool_expr RPAREN field

   19 printf_stmt: PRINTF LPAREN STRING COMMA exprs RPAREN
   20            | PRINTF LPAREN STRING RPAREN

   21 scanf_stmt: SCANF LPAREN STRING COMMA all_values RPAREN

   22 exprs: expr COMMA exprs
   23      | expr

   24 while_stmt: WHILE LPAREN bool_expr RPAREN field

   25 declare_stmt: type instructions

   26 simple_instructions: simple_instruction COMMA simple_instructions
   27                    | simple_instruction

   28 simple_instruction: all_value LOP_ASSIGN expr
   29                   | all_value LOP_ASSIGN bool_expr

   30 instructions: instruction COMMA instructions
   31             | instruction

   32 instruction: IDENTIFIER LOP_ASSIGN expr
   33            | variable

   34 variable: IDENTIFIER
   35         | IDENTIFIER LBRACK INTEGER RBRACK
   36         | variable LBRACK INTEGER RBRACK

   37 bool_expr: LPAREN bool_expr RPAREN
   38          | expr EQ expr
   39          | expr NE expr
   40          | expr GE expr
   41          | expr LE expr
   42          | expr LT expr
   43          | expr GT expr
   44          | bool_expr LOG_AND bool_expr
   45          | bool_expr LOG_OR bool_expr
   46          | NOT bool_expr

   47 all_values: all_value COMMA all_values
   48           | all_value

   49 all_value: IDENTIFIER
   50          | LPAREN all_value RPAREN
   51          | all_value LBRACK expr RBRACK
   52          | all_value POINT IDENTIFIER

   53 expr: INTEGER
   54     | all_value
   55     | LPAREN expr RPAREN
   56     | expr MOD expr
   57     | expr MUL expr
   58     | expr DIV expr
   59     | expr ADD expr
   60     | expr SUB expr
   61     | SUB expr
   62     | ADD expr

   63 type: T_INT
   64     | T_CHAR
   65     | T_VOID
   66     | T_STRING
   67     | T_STRUCT IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 17 18
    ELSE (259) 17
    WHILE (260) 24
    FOR (261) 15
    RETURN (262) 11 12
    PRINTF (263) 19 20
    SCANF (264) 21
    T_INT (265) 63
    T_BOOL (266)
    T_CHAR (267) 64
    T_STRING (268) 66
    T_VOID (269) 65
    T_STRUCT (270) 67
    T_INT_POINTER (271)
    T_CHAR_POINTER (272)
    LOP_ASSIGN (273) 28 29 32
    ADD_ASSIGN (274)
    SUB_ASSIGN (275)
    MUL_ASSIGN (276)
    DIV_ASSIGN (277)
    MOD_ASSIGN (278)
    IDENTIFIER (279) 32 34 35 49 52 67
    INTEGER (280) 35 36 53
    CHAR (281)
    BOOL (282)
    STRING (283) 19 20 21
    SEMICOLON (284) 4 5 9 10 11 12 13 15
    COMMA (285) 19 21 22 26 30 47
    POINT (286) 52
    LPAREN (287) 15 17 18 19 20 21 24 37 50 55
    RPAREN (288) 15 17 18 19 20 21 24 37 50 55
    LBRACK (289) 35 36 51
    RBRACK (290) 35 36 51
    LBRACE (291) 14
    RBRACE (292) 14
    GT (293) 43
    LT (294) 42
    GE (295) 40
    LE (296) 41
    EQ (297) 38
    NE (298) 39
    ADD (299) 59 62
    SUB (300) 60 61
    MUL (301) 57
    DIV (302) 58
    MOD (303) 56
    LOG_AND (304) 44
    LOG_OR (305) 45
    NOT (306) 46
    NEG (307)
    POS (308)
    SELF_INC (309)
    SELF_DEC (310)
    GET_ADDRESS (311)


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    program (58)
        on left: 1
        on right: 0
    statements (59)
        on left: 2 3
        on right: 1 3 14
    statement (60)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 3
    field (61)
        on left: 14
        on right: 15 17 18 24
    for_stmt (62)
        on left: 15
        on right: 6
    assign_stmt (63)
        on left: 16
        on right: 5
    if_else_stmt (64)
        on left: 17 18
        on right: 8
    printf_stmt (65)
        on left: 19 20
        on right: 9
    scanf_stmt (66)
        on left: 21
        on right: 10
    exprs (67)
        on left: 22 23
        on right: 19 22
    while_stmt (68)
        on left: 24
        on right: 7
    declare_stmt (69)
        on left: 25
        on right: 4
    simple_instructions (70)
        on left: 26 27
        on right: 15 16 26
    simple_instruction (71)
        on left: 28 29
        on right: 26 27
    instructions (72)
        on left: 30 31
        on right: 25 30
    instruction (73)
        on left: 32 33
        on right: 30 31
    variable (74)
        on left: 34 35 36
        on right: 33 36
    bool_expr (75)
        on left: 37 38 39 40 41 42 43 44 45 46
        on right: 15 17 18 24 29 37 44 45 46
    all_values (76)
        on left: 47 48
        on right: 21 47
    all_value (77)
        on left: 49 50 51 52
        on right: 28 29 47 48 50 51 52 54
    expr (78)
        on left: 53 54 55 56 57 58 59 60 61 62
        on right: 11 22 23 28 32 38 39 40 41 42 43 51 55 56 57 58 59 60 61 62
    type (79)
        on left: 63 64 65 66 67
        on right: 25


State 0

    0 $accept: . program $end

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    RETURN      shift, and go to state 4
    PRINTF      shift, and go to state 5
    SCANF       shift, and go to state 6
    T_INT       shift, and go to state 7
    T_CHAR      shift, and go to state 8
    T_STRING    shift, and go to state 9
    T_VOID      shift, and go to state 10
    T_STRUCT    shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LPAREN      shift, and go to state 14

    program              go to state 15
    statements           go to state 16
    statement            go to state 17
    for_stmt             go to state 18
    assign_stmt          go to state 19
    if_else_stmt         go to state 20
    printf_stmt          go to state 21
    scanf_stmt           go to state 22
    while_stmt           go to state 23
    declare_stmt         go to state 24
    simple_instructions  go to state 25
    simple_instruction   go to state 26
    all_value            go to state 27
    type                 go to state 28


State 1

   17 if_else_stmt: IF . LPAREN bool_expr RPAREN field ELSE field
   18             | IF . LPAREN bool_expr RPAREN field

    LPAREN  shift, and go to state 29


State 2

   24 while_stmt: WHILE . LPAREN bool_expr RPAREN field

    LPAREN  shift, and go to state 30


State 3

   15 for_stmt: FOR . LPAREN simple_instructions SEMICOLON bool_expr SEMICOLON simple_instructions RPAREN field

    LPAREN  shift, and go to state 31


State 4

   11 statement: RETURN . expr SEMICOLON
   12          | RETURN . SEMICOLON

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    SEMICOLON   shift, and go to state 33
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 38


State 5

   19 printf_stmt: PRINTF . LPAREN STRING COMMA exprs RPAREN
   20            | PRINTF . LPAREN STRING RPAREN

    LPAREN  shift, and go to state 39


State 6

   21 scanf_stmt: SCANF . LPAREN STRING COMMA all_values RPAREN

    LPAREN  shift, and go to state 40


State 7

   63 type: T_INT .

    $default  reduce using rule 63 (type)


State 8

   64 type: T_CHAR .

    $default  reduce using rule 64 (type)


State 9

   66 type: T_STRING .

    $default  reduce using rule 66 (type)


State 10

   65 type: T_VOID .

    $default  reduce using rule 65 (type)


State 11

   67 type: T_STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 41


State 12

   49 all_value: IDENTIFIER .

    $default  reduce using rule 49 (all_value)


State 13

   13 statement: SEMICOLON .

    $default  reduce using rule 13 (statement)


State 14

   50 all_value: LPAREN . all_value RPAREN

    IDENTIFIER  shift, and go to state 12
    LPAREN      shift, and go to state 14

    all_value  go to state 42


State 15

    0 $accept: program . $end

    $end  shift, and go to state 43


State 16

    1 program: statements .

    $default  reduce using rule 1 (program)


State 17

    2 statements: statement .
    3           | statement . statements

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    RETURN      shift, and go to state 4
    PRINTF      shift, and go to state 5
    SCANF       shift, and go to state 6
    T_INT       shift, and go to state 7
    T_CHAR      shift, and go to state 8
    T_STRING    shift, and go to state 9
    T_VOID      shift, and go to state 10
    T_STRUCT    shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LPAREN      shift, and go to state 14

    $default  reduce using rule 2 (statements)

    statements           go to state 44
    statement            go to state 17
    for_stmt             go to state 18
    assign_stmt          go to state 19
    if_else_stmt         go to state 20
    printf_stmt          go to state 21
    scanf_stmt           go to state 22
    while_stmt           go to state 23
    declare_stmt         go to state 24
    simple_instructions  go to state 25
    simple_instruction   go to state 26
    all_value            go to state 27
    type                 go to state 28


State 18

    6 statement: for_stmt .

    $default  reduce using rule 6 (statement)


State 19

    5 statement: assign_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 45


State 20

    8 statement: if_else_stmt .

    $default  reduce using rule 8 (statement)


State 21

    9 statement: printf_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 46


State 22

   10 statement: scanf_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 23

    7 statement: while_stmt .

    $default  reduce using rule 7 (statement)


State 24

    4 statement: declare_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 48


State 25

   16 assign_stmt: simple_instructions .

    $default  reduce using rule 16 (assign_stmt)


State 26

   26 simple_instructions: simple_instruction . COMMA simple_instructions
   27                    | simple_instruction .

    COMMA  shift, and go to state 49

    $default  reduce using rule 27 (simple_instructions)


State 27

   28 simple_instruction: all_value . LOP_ASSIGN expr
   29                   | all_value . LOP_ASSIGN bool_expr
   51 all_value: all_value . LBRACK expr RBRACK
   52          | all_value . POINT IDENTIFIER

    LOP_ASSIGN  shift, and go to state 50
    POINT       shift, and go to state 51
    LBRACK      shift, and go to state 52


State 28

   25 declare_stmt: type . instructions

    IDENTIFIER  shift, and go to state 53

    instructions  go to state 54
    instruction   go to state 55
    variable      go to state 56


State 29

   17 if_else_stmt: IF LPAREN . bool_expr RPAREN field ELSE field
   18             | IF LPAREN . bool_expr RPAREN field

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 57
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 58

    bool_expr  go to state 59
    all_value  go to state 37
    expr       go to state 60


State 30

   24 while_stmt: WHILE LPAREN . bool_expr RPAREN field

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 57
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 58

    bool_expr  go to state 61
    all_value  go to state 37
    expr       go to state 60


State 31

   15 for_stmt: FOR LPAREN . simple_instructions SEMICOLON bool_expr SEMICOLON simple_instructions RPAREN field

    IDENTIFIER  shift, and go to state 12
    LPAREN      shift, and go to state 14

    simple_instructions  go to state 62
    simple_instruction   go to state 26
    all_value            go to state 27


State 32

   53 expr: INTEGER .

    $default  reduce using rule 53 (expr)


State 33

   12 statement: RETURN SEMICOLON .

    $default  reduce using rule 12 (statement)


State 34

   50 all_value: LPAREN . all_value RPAREN
   55 expr: LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 63
    expr       go to state 64


State 35

   62 expr: ADD . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 65


State 36

   61 expr: SUB . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 66


State 37

   51 all_value: all_value . LBRACK expr RBRACK
   52          | all_value . POINT IDENTIFIER
   54 expr: all_value .

    POINT   shift, and go to state 51
    LBRACK  shift, and go to state 52

    $default  reduce using rule 54 (expr)


State 38

   11 statement: RETURN expr . SEMICOLON
   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    SEMICOLON  shift, and go to state 67
    ADD        shift, and go to state 68
    SUB        shift, and go to state 69
    MUL        shift, and go to state 70
    DIV        shift, and go to state 71
    MOD        shift, and go to state 72


State 39

   19 printf_stmt: PRINTF LPAREN . STRING COMMA exprs RPAREN
   20            | PRINTF LPAREN . STRING RPAREN

    STRING  shift, and go to state 73


State 40

   21 scanf_stmt: SCANF LPAREN . STRING COMMA all_values RPAREN

    STRING  shift, and go to state 74


State 41

   67 type: T_STRUCT IDENTIFIER .

    $default  reduce using rule 67 (type)


State 42

   50 all_value: LPAREN all_value . RPAREN
   51          | all_value . LBRACK expr RBRACK
   52          | all_value . POINT IDENTIFIER

    POINT   shift, and go to state 51
    RPAREN  shift, and go to state 75
    LBRACK  shift, and go to state 52


State 43

    0 $accept: program $end .

    $default  accept


State 44

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 45

    5 statement: assign_stmt SEMICOLON .

    $default  reduce using rule 5 (statement)


State 46

    9 statement: printf_stmt SEMICOLON .

    $default  reduce using rule 9 (statement)


State 47

   10 statement: scanf_stmt SEMICOLON .

    $default  reduce using rule 10 (statement)


State 48

    4 statement: declare_stmt SEMICOLON .

    $default  reduce using rule 4 (statement)


State 49

   26 simple_instructions: simple_instruction COMMA . simple_instructions

    IDENTIFIER  shift, and go to state 12
    LPAREN      shift, and go to state 14

    simple_instructions  go to state 76
    simple_instruction   go to state 26
    all_value            go to state 27


State 50

   28 simple_instruction: all_value LOP_ASSIGN . expr
   29                   | all_value LOP_ASSIGN . bool_expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 57
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 58

    bool_expr  go to state 77
    all_value  go to state 37
    expr       go to state 78


State 51

   52 all_value: all_value POINT . IDENTIFIER

    IDENTIFIER  shift, and go to state 79


State 52

   51 all_value: all_value LBRACK . expr RBRACK

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 80


State 53

   32 instruction: IDENTIFIER . LOP_ASSIGN expr
   34 variable: IDENTIFIER .
   35         | IDENTIFIER . LBRACK INTEGER RBRACK

    LOP_ASSIGN  shift, and go to state 81
    LBRACK      shift, and go to state 82

    LBRACK    [reduce using rule 34 (variable)]
    $default  reduce using rule 34 (variable)


State 54

   25 declare_stmt: type instructions .

    $default  reduce using rule 25 (declare_stmt)


State 55

   30 instructions: instruction . COMMA instructions
   31             | instruction .

    COMMA  shift, and go to state 83

    $default  reduce using rule 31 (instructions)


State 56

   33 instruction: variable .
   36 variable: variable . LBRACK INTEGER RBRACK

    LBRACK  shift, and go to state 84

    $default  reduce using rule 33 (instruction)


State 57

   37 bool_expr: LPAREN . bool_expr RPAREN
   50 all_value: LPAREN . all_value RPAREN
   55 expr: LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 57
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 58

    bool_expr  go to state 85
    all_value  go to state 63
    expr       go to state 86


State 58

   46 bool_expr: NOT . bool_expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 57
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 58

    bool_expr  go to state 87
    all_value  go to state 37
    expr       go to state 60


State 59

   17 if_else_stmt: IF LPAREN bool_expr . RPAREN field ELSE field
   18             | IF LPAREN bool_expr . RPAREN field
   44 bool_expr: bool_expr . LOG_AND bool_expr
   45          | bool_expr . LOG_OR bool_expr

    RPAREN   shift, and go to state 88
    LOG_AND  shift, and go to state 89
    LOG_OR   shift, and go to state 90


State 60

   38 bool_expr: expr . EQ expr
   39          | expr . NE expr
   40          | expr . GE expr
   41          | expr . LE expr
   42          | expr . LT expr
   43          | expr . GT expr
   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    GT   shift, and go to state 91
    LT   shift, and go to state 92
    GE   shift, and go to state 93
    LE   shift, and go to state 94
    EQ   shift, and go to state 95
    NE   shift, and go to state 96
    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72


State 61

   24 while_stmt: WHILE LPAREN bool_expr . RPAREN field
   44 bool_expr: bool_expr . LOG_AND bool_expr
   45          | bool_expr . LOG_OR bool_expr

    RPAREN   shift, and go to state 97
    LOG_AND  shift, and go to state 89
    LOG_OR   shift, and go to state 90


State 62

   15 for_stmt: FOR LPAREN simple_instructions . SEMICOLON bool_expr SEMICOLON simple_instructions RPAREN field

    SEMICOLON  shift, and go to state 98


State 63

   50 all_value: LPAREN all_value . RPAREN
   51          | all_value . LBRACK expr RBRACK
   52          | all_value . POINT IDENTIFIER
   54 expr: all_value .

    POINT   shift, and go to state 51
    RPAREN  shift, and go to state 75
    LBRACK  shift, and go to state 52

    RPAREN    [reduce using rule 54 (expr)]
    $default  reduce using rule 54 (expr)


State 64

   55 expr: LPAREN expr . RPAREN
   56     | expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    RPAREN  shift, and go to state 99
    ADD     shift, and go to state 68
    SUB     shift, and go to state 69
    MUL     shift, and go to state 70
    DIV     shift, and go to state 71
    MOD     shift, and go to state 72


State 65

   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr
   62     | ADD expr .

    $default  reduce using rule 62 (expr)


State 66

   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr
   61     | SUB expr .

    $default  reduce using rule 61 (expr)


State 67

   11 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 11 (statement)


State 68

   59 expr: expr ADD . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 100


State 69

   60 expr: expr SUB . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 101


State 70

   57 expr: expr MUL . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 102


State 71

   58 expr: expr DIV . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 103


State 72

   56 expr: expr MOD . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 104


State 73

   19 printf_stmt: PRINTF LPAREN STRING . COMMA exprs RPAREN
   20            | PRINTF LPAREN STRING . RPAREN

    COMMA   shift, and go to state 105
    RPAREN  shift, and go to state 106


State 74

   21 scanf_stmt: SCANF LPAREN STRING . COMMA all_values RPAREN

    COMMA  shift, and go to state 107


State 75

   50 all_value: LPAREN all_value RPAREN .

    $default  reduce using rule 50 (all_value)


State 76

   26 simple_instructions: simple_instruction COMMA simple_instructions .

    $default  reduce using rule 26 (simple_instructions)


State 77

   29 simple_instruction: all_value LOP_ASSIGN bool_expr .
   44 bool_expr: bool_expr . LOG_AND bool_expr
   45          | bool_expr . LOG_OR bool_expr

    LOG_AND  shift, and go to state 89
    LOG_OR   shift, and go to state 90

    $default  reduce using rule 29 (simple_instruction)


State 78

   28 simple_instruction: all_value LOP_ASSIGN expr .
   38 bool_expr: expr . EQ expr
   39          | expr . NE expr
   40          | expr . GE expr
   41          | expr . LE expr
   42          | expr . LT expr
   43          | expr . GT expr
   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    GT   shift, and go to state 91
    LT   shift, and go to state 92
    GE   shift, and go to state 93
    LE   shift, and go to state 94
    EQ   shift, and go to state 95
    NE   shift, and go to state 96
    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 28 (simple_instruction)


State 79

   52 all_value: all_value POINT IDENTIFIER .

    $default  reduce using rule 52 (all_value)


State 80

   51 all_value: all_value LBRACK expr . RBRACK
   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    RBRACK  shift, and go to state 108
    ADD     shift, and go to state 68
    SUB     shift, and go to state 69
    MUL     shift, and go to state 70
    DIV     shift, and go to state 71
    MOD     shift, and go to state 72


State 81

   32 instruction: IDENTIFIER LOP_ASSIGN . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 109


State 82

   35 variable: IDENTIFIER LBRACK . INTEGER RBRACK

    INTEGER  shift, and go to state 110


State 83

   30 instructions: instruction COMMA . instructions

    IDENTIFIER  shift, and go to state 53

    instructions  go to state 111
    instruction   go to state 55
    variable      go to state 56


State 84

   36 variable: variable LBRACK . INTEGER RBRACK

    INTEGER  shift, and go to state 112


State 85

   37 bool_expr: LPAREN bool_expr . RPAREN
   44          | bool_expr . LOG_AND bool_expr
   45          | bool_expr . LOG_OR bool_expr

    RPAREN   shift, and go to state 113
    LOG_AND  shift, and go to state 89
    LOG_OR   shift, and go to state 90


State 86

   38 bool_expr: expr . EQ expr
   39          | expr . NE expr
   40          | expr . GE expr
   41          | expr . LE expr
   42          | expr . LT expr
   43          | expr . GT expr
   55 expr: LPAREN expr . RPAREN
   56     | expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    RPAREN  shift, and go to state 99
    GT      shift, and go to state 91
    LT      shift, and go to state 92
    GE      shift, and go to state 93
    LE      shift, and go to state 94
    EQ      shift, and go to state 95
    NE      shift, and go to state 96
    ADD     shift, and go to state 68
    SUB     shift, and go to state 69
    MUL     shift, and go to state 70
    DIV     shift, and go to state 71
    MOD     shift, and go to state 72


State 87

   44 bool_expr: bool_expr . LOG_AND bool_expr
   45          | bool_expr . LOG_OR bool_expr
   46          | NOT bool_expr .

    $default  reduce using rule 46 (bool_expr)


State 88

   17 if_else_stmt: IF LPAREN bool_expr RPAREN . field ELSE field
   18             | IF LPAREN bool_expr RPAREN . field

    LBRACE  shift, and go to state 114

    field  go to state 115


State 89

   44 bool_expr: bool_expr LOG_AND . bool_expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 57
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 58

    bool_expr  go to state 116
    all_value  go to state 37
    expr       go to state 60


State 90

   45 bool_expr: bool_expr LOG_OR . bool_expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 57
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 58

    bool_expr  go to state 117
    all_value  go to state 37
    expr       go to state 60


State 91

   43 bool_expr: expr GT . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 118


State 92

   42 bool_expr: expr LT . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 119


State 93

   40 bool_expr: expr GE . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 120


State 94

   41 bool_expr: expr LE . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 121


State 95

   38 bool_expr: expr EQ . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 122


State 96

   39 bool_expr: expr NE . expr

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    all_value  go to state 37
    expr       go to state 123


State 97

   24 while_stmt: WHILE LPAREN bool_expr RPAREN . field

    LBRACE  shift, and go to state 114

    field  go to state 124


State 98

   15 for_stmt: FOR LPAREN simple_instructions SEMICOLON . bool_expr SEMICOLON simple_instructions RPAREN field

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 57
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 58

    bool_expr  go to state 125
    all_value  go to state 37
    expr       go to state 60


State 99

   55 expr: LPAREN expr RPAREN .

    $default  reduce using rule 55 (expr)


State 100

   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   59     | expr ADD expr .
   60     | expr . SUB expr

    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 59 (expr)


State 101

   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr
   60     | expr SUB expr .

    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 60 (expr)


State 102

   56 expr: expr . MOD expr
   57     | expr . MUL expr
   57     | expr MUL expr .
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    $default  reduce using rule 57 (expr)


State 103

   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   58     | expr DIV expr .
   59     | expr . ADD expr
   60     | expr . SUB expr

    $default  reduce using rule 58 (expr)


State 104

   56 expr: expr . MOD expr
   56     | expr MOD expr .
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    $default  reduce using rule 56 (expr)


State 105

   19 printf_stmt: PRINTF LPAREN STRING COMMA . exprs RPAREN

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    exprs      go to state 126
    all_value  go to state 37
    expr       go to state 127


State 106

   20 printf_stmt: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 20 (printf_stmt)


State 107

   21 scanf_stmt: SCANF LPAREN STRING COMMA . all_values RPAREN

    IDENTIFIER  shift, and go to state 12
    LPAREN      shift, and go to state 14

    all_values  go to state 128
    all_value   go to state 129


State 108

   51 all_value: all_value LBRACK expr RBRACK .

    $default  reduce using rule 51 (all_value)


State 109

   32 instruction: IDENTIFIER LOP_ASSIGN expr .
   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 32 (instruction)


State 110

   35 variable: IDENTIFIER LBRACK INTEGER . RBRACK

    RBRACK  shift, and go to state 130


State 111

   30 instructions: instruction COMMA instructions .

    $default  reduce using rule 30 (instructions)


State 112

   36 variable: variable LBRACK INTEGER . RBRACK

    RBRACK  shift, and go to state 131


State 113

   37 bool_expr: LPAREN bool_expr RPAREN .

    $default  reduce using rule 37 (bool_expr)


State 114

   14 field: LBRACE . statements RBRACE

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    RETURN      shift, and go to state 4
    PRINTF      shift, and go to state 5
    SCANF       shift, and go to state 6
    T_INT       shift, and go to state 7
    T_CHAR      shift, and go to state 8
    T_STRING    shift, and go to state 9
    T_VOID      shift, and go to state 10
    T_STRUCT    shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LPAREN      shift, and go to state 14

    statements           go to state 132
    statement            go to state 17
    for_stmt             go to state 18
    assign_stmt          go to state 19
    if_else_stmt         go to state 20
    printf_stmt          go to state 21
    scanf_stmt           go to state 22
    while_stmt           go to state 23
    declare_stmt         go to state 24
    simple_instructions  go to state 25
    simple_instruction   go to state 26
    all_value            go to state 27
    type                 go to state 28


State 115

   17 if_else_stmt: IF LPAREN bool_expr RPAREN field . ELSE field
   18             | IF LPAREN bool_expr RPAREN field .

    ELSE  shift, and go to state 133

    $default  reduce using rule 18 (if_else_stmt)


State 116

   44 bool_expr: bool_expr . LOG_AND bool_expr
   44          | bool_expr LOG_AND bool_expr .
   45          | bool_expr . LOG_OR bool_expr

    $default  reduce using rule 44 (bool_expr)


State 117

   44 bool_expr: bool_expr . LOG_AND bool_expr
   45          | bool_expr . LOG_OR bool_expr
   45          | bool_expr LOG_OR bool_expr .

    $default  reduce using rule 45 (bool_expr)


State 118

   43 bool_expr: expr GT expr .
   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 43 (bool_expr)


State 119

   42 bool_expr: expr LT expr .
   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 42 (bool_expr)


State 120

   40 bool_expr: expr GE expr .
   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 40 (bool_expr)


State 121

   41 bool_expr: expr LE expr .
   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 41 (bool_expr)


State 122

   38 bool_expr: expr EQ expr .
   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 38 (bool_expr)


State 123

   39 bool_expr: expr NE expr .
   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 39 (bool_expr)


State 124

   24 while_stmt: WHILE LPAREN bool_expr RPAREN field .

    $default  reduce using rule 24 (while_stmt)


State 125

   15 for_stmt: FOR LPAREN simple_instructions SEMICOLON bool_expr . SEMICOLON simple_instructions RPAREN field
   44 bool_expr: bool_expr . LOG_AND bool_expr
   45          | bool_expr . LOG_OR bool_expr

    SEMICOLON  shift, and go to state 134
    LOG_AND    shift, and go to state 89
    LOG_OR     shift, and go to state 90


State 126

   19 printf_stmt: PRINTF LPAREN STRING COMMA exprs . RPAREN

    RPAREN  shift, and go to state 135


State 127

   22 exprs: expr . COMMA exprs
   23      | expr .
   56 expr: expr . MOD expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . ADD expr
   60     | expr . SUB expr

    COMMA  shift, and go to state 136
    ADD    shift, and go to state 68
    SUB    shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72

    $default  reduce using rule 23 (exprs)


State 128

   21 scanf_stmt: SCANF LPAREN STRING COMMA all_values . RPAREN

    RPAREN  shift, and go to state 137


State 129

   47 all_values: all_value . COMMA all_values
   48           | all_value .
   51 all_value: all_value . LBRACK expr RBRACK
   52          | all_value . POINT IDENTIFIER

    COMMA   shift, and go to state 138
    POINT   shift, and go to state 51
    LBRACK  shift, and go to state 52

    $default  reduce using rule 48 (all_values)


State 130

   35 variable: IDENTIFIER LBRACK INTEGER RBRACK .

    $default  reduce using rule 35 (variable)


State 131

   36 variable: variable LBRACK INTEGER RBRACK .

    $default  reduce using rule 36 (variable)


State 132

   14 field: LBRACE statements . RBRACE

    RBRACE  shift, and go to state 139


State 133

   17 if_else_stmt: IF LPAREN bool_expr RPAREN field ELSE . field

    LBRACE  shift, and go to state 114

    field  go to state 140


State 134

   15 for_stmt: FOR LPAREN simple_instructions SEMICOLON bool_expr SEMICOLON . simple_instructions RPAREN field

    IDENTIFIER  shift, and go to state 12
    LPAREN      shift, and go to state 14

    simple_instructions  go to state 141
    simple_instruction   go to state 26
    all_value            go to state 27


State 135

   19 printf_stmt: PRINTF LPAREN STRING COMMA exprs RPAREN .

    $default  reduce using rule 19 (printf_stmt)


State 136

   22 exprs: expr COMMA . exprs

    IDENTIFIER  shift, and go to state 12
    INTEGER     shift, and go to state 32
    LPAREN      shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36

    exprs      go to state 142
    all_value  go to state 37
    expr       go to state 127


State 137

   21 scanf_stmt: SCANF LPAREN STRING COMMA all_values RPAREN .

    $default  reduce using rule 21 (scanf_stmt)


State 138

   47 all_values: all_value COMMA . all_values

    IDENTIFIER  shift, and go to state 12
    LPAREN      shift, and go to state 14

    all_values  go to state 143
    all_value   go to state 129


State 139

   14 field: LBRACE statements RBRACE .

    $default  reduce using rule 14 (field)


State 140

   17 if_else_stmt: IF LPAREN bool_expr RPAREN field ELSE field .

    $default  reduce using rule 17 (if_else_stmt)


State 141

   15 for_stmt: FOR LPAREN simple_instructions SEMICOLON bool_expr SEMICOLON simple_instructions . RPAREN field

    RPAREN  shift, and go to state 144


State 142

   22 exprs: expr COMMA exprs .

    $default  reduce using rule 22 (exprs)


State 143

   47 all_values: all_value COMMA all_values .

    $default  reduce using rule 47 (all_values)


State 144

   15 for_stmt: FOR LPAREN simple_instructions SEMICOLON bool_expr SEMICOLON simple_instructions RPAREN . field

    LBRACE  shift, and go to state 114

    field  go to state 145


State 145

   15 for_stmt: FOR LPAREN simple_instructions SEMICOLON bool_expr SEMICOLON simple_instructions RPAREN field .

    $default  reduce using rule 15 (for_stmt)
